[{"C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\index.tsx":"1","C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\theme.ts":"2","C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\App.tsx":"3","C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\pages\\SignIn.tsx":"4","C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\myUiComponent\\buttons.tsx":"5","C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\components\\modalBlock\\index.tsx":"6","C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\pages\\home.tsx":"7"},{"size":389,"mtime":1609224422034,"results":"8","hashOfConfig":"9"},{"size":621,"mtime":1607751352134,"results":"10","hashOfConfig":"9"},{"size":583,"mtime":1609224685843,"results":"11","hashOfConfig":"9"},{"size":8358,"mtime":1609172649775,"results":"12","hashOfConfig":"9"},{"size":504,"mtime":1607758991477,"results":"13","hashOfConfig":"9"},{"size":1076,"mtime":1609172649771,"results":"14","hashOfConfig":"9"},{"size":163,"mtime":1609172649776,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uel9lp",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\index.tsx",[],"C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\theme.ts",[],["33","34"],"C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\App.tsx",["35","36"],"C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\pages\\SignIn.tsx",["37","38"],"import React, { useState } from 'react';\r\nimport {\r\n    Button, DialogActions,\r\n    DialogContent, FormControl, FormGroup,\r\n    makeStyles, TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport { ButtonSemicircularEdge } from '../myUiComponent/buttons';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport ModeCommentOutlinedIcon from '@material-ui/icons/ModeCommentOutlined';\r\nimport DialogModalBox from \"../components/modalBlock\";\r\n\r\n\r\nlet useStyles = makeStyles((theme)=> ({\r\n    wrapper: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        width: '100%'\r\n    },\r\n    blueAside: {\r\n        backgroundColor: '#74cafc',\r\n        width: '50%',\r\n        display: 'flex',\r\n        position: \"relative\",\r\n        overflow: 'hidden',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        boxSizing: \"border-box\",\r\n        padding: \"15px\"\r\n    },\r\n    blueAsideUl:{\r\n        maxWidth: '380px',\r\n        position: 'relative',\r\n        zIndex: 2,\r\n        width: '100%',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            display: 'flex',\r\n            marginBottom: '40px',\r\n            alignItems: 'center',\r\n            '& svg': {\r\n                color: '#fff',\r\n                fontSize: '29px'\r\n            },\r\n            '& p': {\r\n                marginLeft: '15px',\r\n                fontWeight: 'bold',\r\n                fontSize: '19px',\r\n                color: '#fff'\r\n            }\r\n        }\r\n    },\r\n    loginAside: {\r\n        width: '50%',\r\n        flexDirection: 'column',\r\n        alignItems: \"center\",\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        boxSizing: \"border-box\",\r\n        padding: \"15px\"\r\n    },\r\n    loginTwitterIcon: {\r\n        alignSelf: \"flex-start\",\r\n        fontSize: \"50px\",\r\n    },\r\n    loginAsideTittle: {\r\n        \"fontWeight\": 'bold',\r\n        marginBottom: \"1em\",\r\n        marginTop: '1em'\r\n    },\r\n    loginAsideDescription: {\r\n        fontWeight: 'bold',\r\n        fontSize: '15px',\r\n        marginBottom: '1em'\r\n    },\r\n    wrapperLogin: {\r\n        maxWidth: '380px',\r\n        width: '100%'\r\n    },\r\n    buttonReg: {\r\n        marginBottom: \"15px\"\r\n    },\r\n    twitterIconBlueAside: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        width: '200%',\r\n        transform: \"translate(-13%, -25%)\",\r\n        height: '200%'\r\n    },\r\n    circleButton: {\r\n        borderRadius: \"100px\"\r\n    },\r\n    modalField: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    registerFormControl: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    openFormControl: {\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}));\r\n\r\n\r\nfunction SignIn () {\r\n    let classes = useStyles();\r\n\r\n    type visibleBoxType = 'signIn' | 'signUp';\r\n    let [visibleBlockModal, setVisibleBlockModal] = useState<visibleBoxType>();\r\n\r\n    function handleCloseBlockModal(): void{\r\n        setVisibleBlockModal(undefined);\r\n    }\r\n\r\n    function handleSetVisibleBoxModal (blockName: visibleBoxType): void{\r\n        setVisibleBlockModal(blockName);\r\n    }\r\n\r\n    return <div className={classes.wrapper}>\r\n        <div className={classes.blueAside}>\r\n            <TwitterIcon color=\"primary\" className={classes.twitterIconBlueAside} />\r\n           <ul className={classes.blueAsideUl}>\r\n               <li>\r\n                   <SearchIcon />\r\n                   <Typography>Читайте о том, что вам интересно.</Typography>\r\n               </li>\r\n               <li>\r\n                   <PeopleOutlineIcon />\r\n                   <Typography>Узнайте, о чем говорят в мире.</Typography>\r\n               </li>\r\n               <li>\r\n                   <ModeCommentOutlinedIcon />\r\n                   <Typography>Присоединяйтесь к общению.</Typography>\r\n               </li>\r\n           </ul>\r\n        </div>\r\n        <div className={classes.loginAside}>\r\n            <div className={classes.wrapperLogin}>\r\n                <TwitterIcon color=\"primary\" className={classes.loginTwitterIcon} />\r\n                <Typography className={classes.loginAsideTittle} variant=\"h5\" component=\"h1\">Узнайте, что происходит в мире прямо сейчас</Typography>\r\n                <Typography className={classes.loginAsideDescription}>Присоединяйтесь к Твиттеру прямо сейчас!</Typography>\r\n                <ButtonSemicircularEdge\r\n                    onClick={()=>handleSetVisibleBoxModal('signUp')}\r\n                    className={classes.buttonReg}\r\n                    disableRipple={true}\r\n                    variant=\"contained\"\r\n                    color=\"primary\">Зарегистрироваться</ButtonSemicircularEdge>\r\n                <ButtonSemicircularEdge\r\n                    onClick={()=>handleSetVisibleBoxModal('signIn')}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\">Войти</ButtonSemicircularEdge>\r\n            </div>\r\n        </div>\r\n\r\n        <DialogModalBox\r\n            onClose={handleCloseBlockModal}\r\n            visible={visibleBlockModal === 'signUp'}\r\n            title={'Создайте учётную запись'}\r\n        >\r\n            <FormControl variant=\"filled\" fullWidth className={classes.registerFormControl} >\r\n                <FormGroup>\r\n                    <TextField\r\n                        className={classes.modalField}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Имя\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        className={classes.modalField}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"mail\"\r\n                        label=\"E-Mail\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        className={classes.modalField}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                    />\r\n                    <Button\r\n                        onClick={handleCloseBlockModal}\r\n                        disableRipple\r\n                        fullWidth\r\n                        className={classes.circleButton}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        Войти\r\n                    </Button>\r\n                </FormGroup>\r\n            </FormControl>\r\n        </DialogModalBox>\r\n\r\n        <DialogModalBox onClose={handleCloseBlockModal} visible={visibleBlockModal === 'signIn'} title={'Войти в твиттер'}>\r\n            <FormControl fullWidth className={classes.openFormControl}>\r\n                <FormGroup>\r\n                    <TextField\r\n                        className={classes.modalField}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"mail\"\r\n                        label=\"E-Mail\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        className={classes.modalField}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                    />\r\n                    <Button\r\n                        onClick={handleCloseBlockModal}\r\n                        disableRipple\r\n                        fullWidth\r\n                        className={classes.circleButton}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        Войти\r\n                    </Button>\r\n                </FormGroup>\r\n            </FormControl>\r\n        </DialogModalBox>\r\n    </div>\r\n};\r\n\r\n\r\nexport default SignIn;","C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\myUiComponent\\buttons.tsx",["39","40"],"import React from 'react';\r\nimport { Button ,makeStyles, withStyles } from \"@material-ui/core\";\r\n\r\n\r\n\r\nlet ButtonSemicircularEdge = withStyles({\r\n    root: {\r\n        borderRadius: '20px',\r\n        width: '100%',\r\n        fontWeight: 'bold',\r\n        boxShadow: \"none\",\r\n        textTransform: 'capitalize',\r\n        borderColor: '#1da1f2',\r\n        '&:hover': {\r\n            borderColor: '#1da1f2',\r\n            boxShadow: 'none'\r\n        }\r\n    }\r\n})(Button)\r\n\r\nexport {\r\n    ButtonSemicircularEdge\r\n};","C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\components\\modalBlock\\index.tsx",[],"C:\\Users\\Asus\\Desktop\\clone-twitter\\frontend\\src\\pages\\home.tsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":8,"column":3,"nodeType":"47","messageId":"48","endLine":8,"endColumn":7},{"ruleId":"45","severity":1,"message":"50","line":3,"column":13,"nodeType":"47","messageId":"48","endLine":3,"endColumn":26},{"ruleId":"45","severity":1,"message":"51","line":4,"column":5,"nodeType":"47","messageId":"48","endLine":4,"endColumn":18},{"ruleId":"45","severity":1,"message":"52","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"53","line":2,"column":18,"nodeType":"47","messageId":"48","endLine":2,"endColumn":28},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'React' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]